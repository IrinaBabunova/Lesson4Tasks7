package org.example;

public class Main {
    public static void main(String[] args) {

        System.out.println("Задание 7. Повышенная сложность.");
        /**
         * ### Задание 7. Повышенная сложность.
         * Клиент хочет получить кредит.
         * Требуется написать скоринг (программу для предварительного одобрения/отказа).На вход получаем данные о возрасте, зарплате и желаемой сумме.
         * Создать переменные age = 25, salary = 60_000, wantedSum = 330_000.
         * Подсчитать и вывести ответ, одобрен кредит или нет
         * Правила:
         * Базовая ставка 10% годовых.
         * Срок 12 месяцев.
         * Максимальный ежемесячный платеж -- 50% от ЗП.
         * Если возраст меньше 23, то добавляем 1% к ставке.
         * Если возраст меньше 30 (но больше или равен 23), то добавляем 0.5% к ставке.
         * Увеличения ставки не суммируются.
         * Если зарплата больше 80_000, уменьшаем ставку на 0.7%.
         * Подсчитать ставку. Подсчитать сумму кредита (желаемая сумма + ставка).
         * Подсчитать сумму платежа в месяц.
         * На основании зарплаты подсчитать максимальный допустимый платеж. На основании максимального допустимого платежа и платежа по кредиту вынести решение.
         * Вывести результат в консоль.
         * Пример: "Максимальный платеж при ЗП *** равен *** рублей. Платеж по кредиту *** рублей. Одобрено/отказано".
         */

        int age=21;
        int salary=45000;
        int wantedSum = 230000;
        double baseRate=10;
        double sumCredit;

        if (age < 23) {
            baseRate = baseRate+1;
        } else if ((age >= 23) || (age < 30)) {
            baseRate = baseRate+0.5;
        }
        if (salary > 80000) {
            baseRate = baseRate - 0.7;
        }
        sumCredit=wantedSum+wantedSum*baseRate/100;
        double monthlyPayment=sumCredit/12;
        double maxMonthlyPayment = salary/2;
        if (monthlyPayment <= maxMonthlyPayment) {System.out.println("Ваша кредитная ставка = " + baseRate + " и сумма кредита = " + sumCredit + " ваш ежемесячный платеж составит " + monthlyPayment + "Ваша максимальная ставка составит = " + maxMonthlyPayment + "Кредит одобрен");
        } else {System.out.println("Ваша кредитная ставка = " + baseRate + " и сумма кредита = " + sumCredit + " ваш ежемесячный платеж составит " + monthlyPayment + "Ваша максимальная ставка составит = " + maxMonthlyPayment + "В кредите отказано");}

        System.out.println("Выбор оффера");
        /**Программисту сделали два предложения о работе. Он не может выбрать предложение исходя из предлагаемой
         * компенсации, так как путь до предполагаемых мест работы занимает разное время.
         Для того, чтобы нормально выбрать, программист должен посчитать сколько у него будет выходить за час
         работы, считая время, за которое он будет добираться на работу и потом с работы домой.
         Программа должна брать из переменных информацию о ежемесячной компенсации и времени которое занимает
         путь на работу и обратно и на основании этих данных писать какое предложение выбрать.
         */
         int monthlyCompensation1 = 20000;
         double timeToWork1 = 1.2;
         double timeHome1 = 1.3;
         int monthlyCompensation2 = 30000;
         double timeToWork2 = 1.5;
         double timeHome2 = 2.7;
         double compensationPerHour1=monthlyCompensation1/(timeHome1+timeToWork1);
         double compensationPerHour2=monthlyCompensation2/(timeHome2+timeToWork2);
         if (compensationPerHour1 > compensationPerHour2) {
             System.out.println("стоит выбрать первый вариант!");
         } else {System.out.println("Стоит выбрать второй вариант!");}

         System.out.println("Контроль на аттракционе");
         /** Без родителей на аттракцион пускают только с 15 лет.
          Для того, чтобы доказать, что ему 15 лет или больше, ребёнок должен достать головой до планки, которая
          подвешена на высоте 160 см.
          Нужно написать программу, которая в зависимости от роста посетителя и того, пришёл ли он с родителями,
          напечатает, можно ему на аттракцион или нет.*/

         boolean parents=true;
         int height=120;

         if ((parents) || (height>=160)) {
             System.out.println("На аттракционы можно!");
         } else  {
             System.out.println("На аттракционы нельзя! Подрасти!");
         }

         System.out.println("Похудательная программа");
         /** После пропуска своих данных через программу для вычисления идеального веса, программист обнаружил,
          * что ему надо похудеть.
          Для того, чтобы похудеть он ведёт учёт потреблённых за день каллорий и перед тем как поесть проверяет,
          не перейдёт ли он за дневной лимит в 1400 ккал.
          За сегодня программист уже употребил какое-то количество каллорий.
          На ужин у него есть выбор - съесть шоколадку на 340 ккал, тарелку каши на 250 ккал или кусок сала на
          500 ккал. Съесть можно только что-то одно.
          Помоги программисту! Напиши программу, которая посмотрит, сколько каллорий программист уже употребил
          и скажет какое из блюд программисту можно съесть перед сном. У программиста нет предпочтений, можно
          выбрать любое блюдо, в котором не слишком много каллорий.
          Если во всех блюдах слишком много каллорий, программа должна написать, что лимит каллорий на сегодня
          исчерпан.*/

          int sumCalories = 700;
          int limitCalories = 1400;
          int chocolate = 340;
          int porridge = 250;
          int bacon = 500;

          if ((sumCalories+chocolate)<limitCalories) {
              System.out.println("Можешь съесть шоколадку на ужин!");
          } else if ((sumCalories+porridge)<limitCalories) {
              System.out.println("Можешь съесть кашу на ужин!");
          } else if ((sumCalories+bacon)<limitCalories) {
              System.out.println("Можешь съесть кусок сала на ужин!");
          } else {
              System.out.println("лимит каллорий на сегодня исчерпан");
          }

          System.out.println("Бой джедаев и ситхов");
        /**
         Бой джедаев и ситхов
         Джедай и ситх сошлись в смертельном поединке.
         Известно, что если ситх стоит выше джедая, ситх проиграет. Если джедай стоит выше ситха, джедай
         выигрывает. Если ситх и джедай на одной высоте, победа остаётся за ситхом.
         Но из этого правила есть исключения. Ситх Палпатин выигрывает всегда. Джедай Оби Ван выигрырывает у
         ситха Дарта Мола даже если они стоят на одной и той же высоте.
         Если у джедая будет программа, которая сможет в зависимости от положения соперников и их имён определить
         итог схватки, джедаи смогут не вступать в заведомо проигрышные поединки.
         Нужно написать такую программу и помочь джедаям в их борьбе со злом!
         */

        boolean sithPalpatin=false;
        boolean jediObiVan=true;
        boolean sithDartMol=true;
        int heightSith=11;
        int heightJedi=11;

        if (sithPalpatin) {
            System.out.println("Выиграют ситхи1");
        } else if (heightJedi!=heightSith) {
            System.out.println("Выиграют джедаи2");
        } else if (jediObiVan && sithDartMol) {
            System.out.println("Выигрывают джедаи3");
        } else { System.out.println("Выигрывают ситхи4");
        }
    }
}